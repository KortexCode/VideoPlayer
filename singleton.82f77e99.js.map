{"version":3,"sources":["ejercicios/singleton/singleton.ts","ejercicios/singleton/index.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,SAAA,GAAA,aAAA,YAAA;EAGI,SAAA,SAAA,GAAA;IACI;EAAA;EAEG,SAAA,CAAA,WAAW,GAAlB,YAAA;ACNJ,IAAA,ADOQ,WCPR,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AAEA,IAAM,ADME,CCND,GAAG,ADMC,CAAC,SAAS,CCNX,ADMY,CCNZ,OAAS,ADMW,CCNV,CDMW,UCNA,EAAE;AACjC,MDMY,CCNL,CAAC,GAAG,CAAC,GDMS,CAAC,QAAQ,GAAG,CCNL,EAAE,CAAC,ADMM,CCNL,QDMc,EAAE,CAAC,CAAA;ACLjD,IAAM,CAAC,GAAG,WAAA,CAAA,OAAS,CAAC,WAAW,EAAE;AACjC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAEhC,IDKQ,GCLD,CAAC,GAAG,ADKI,CCLH,ADKI,GAAG,CAAC,SAAS,CAAC,GCLD,EAAE,CAAC,EDKM,CAAC,ECLF,CAAC,CAAC;IDM/B,OAAO,SAAS,CAAC,QAAQ;EAC7B,CAAC;EACL,OAAA,SAAC;AAAD,CAfA,EAAA","file":"singleton.82f77e99.js","sourceRoot":"..","sourcesContent":["export default class Singleton{\n    private static instance: Singleton;//Propiedad privada y est√°tica de tipo Singleton\n\n    private constructor(){ //Es privado para que no pueda ser instanciada\n        //init\n    }\n    static getInstance(){\n        //Debemos validar si la instancia existe o no\n        if(!Singleton.instance){\n            Singleton.instance = new Singleton();//Creamos la instancia y la guardamos en la propiedad \"instance\"\n        }\n\n        console.log(Singleton.instance);\n        return Singleton.instance;\n    }\n}\n\n","import Singleton from \"./singleton\";\n\nconst a = Singleton.getInstance();\nconsole.log(\"la instancia a\", a)\nconst b = Singleton.getInstance();\nconsole.log(\"la instancia b\", b)\n\nconsole.log(\"A es igual a B?\", a === b);"]}