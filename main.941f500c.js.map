{"version":3,"sources":["ejercicios/decorator/main.ts"],"names":[],"mappings":"AACA,IAAM,IAAI,GAAG,UAAC,EAAE,EAAA;EAAK,OAAA,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;AAA1B,CAA0B;AAC/C,IAAM,KAAK,GAAoB,IAAI,CAAC,QAAQ,CAAC;AAAC;AAE9C,IAAA,KAAA,GAAA,aAAA,YAAA;EAII,SAAA,KAAA,CAAY,KAAsB,EAAA;IAAlC,IAAA,KAAA,GAAA,IAAA;;IACI,IAAI,CAAC,KAAK,GAAE,KAAK;IACjB,IAAI,CAAC,MAAM,GAAE,EAAE;IAEf,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;IAC9C,YAAY,CAAC,SAAS,GAAC,aAAa;IACpC;IACA;IACA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IACzE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAC,YAAA;MAChC,KAAI,CAAC,MAAM,GAAC,EAAE;MACd,KAAI,CAAC,QAAQ,EAAE;MACf,YAAY,CAAC,SAAS,GAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;IAC/C,CAAC,CAAC;EACN;EACA,KAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA,CAAW,CAAC;EAChB,OAAA,KAAC;AAAD,CApBA,EAAA;AAsBA,SAAS,sBAAsB,CAAC,KAAW,EAAA;EACvC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;EACjC,KAAK,CAAC,QAAQ,GAAG,YAAA;IACb,WAAW,EAAE,CAAC,CAAA;IACd,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK;IAC7B,IAAG,CAAC,KAAK,EAAC;MACN,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;;EAE5C,CAAC;EACD,OAAO,KAAK;AAChB;AACA,SAAS,mBAAmB,CAAC,KAAW,EAAA;EACpC,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;EACjC,KAAK,CAAC,QAAQ,GAAG,YAAA;IACb,WAAW,EAAE,CAAC,CAAA;IACd,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK;IAC7B,IAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC,CAAC,EAAC;MACvB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;;EAEpD,CAAC;EACD,OAAO,KAAK;AAChB;AACA,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC;AAC5B,KAAK,GAAG,sBAAsB,CAAC,KAAK,CAAC;AACrC,mBAAmB,CAAC,KAAK,CAAC","file":"main.941f500c.js","sourceRoot":"..","sourcesContent":["\nconst node = (id) => document.querySelector(id);\nconst email:HTMLInputElement = node(\"#email\");;\n\nclass Field{\n    errors : string[];\n    input: HTMLInputElement;\n\n    constructor(input:HTMLInputElement){\n        this.input= input;\n        this.errors= [];\n\n        let errorMessage = document.createElement('p');\n        errorMessage.className='text-danger';\n        //aquí se posiciona la etiqueta p al final dentro de su padre.\n        //nextSinbling devolverá nulo, por eso insertBefore tendrá que poner la etiqueta p al final.\n        this.input.parentNode?.insertBefore(errorMessage, this.input.nextSibling); \n        this.input.addEventListener('input',()=>{\n            this.errors=[];\n            this.validate();\n            errorMessage.innerText=this.errors[0] || '';\n        })\n    }\n    validate(){}\n}\n\nfunction RequiredFieldDecorator(field:Field):Field{//Esta función es el decorator\n    let preValidate = field.validate;//Guardamos el método antes de ser extendido\n    field.validate = function(){//Aquí redefinimos o extendemos el método validate()\n        preValidate();//Aquí llamamos al método anterior a ser extendido para ejecutar la y todas las validaciones anteriores\n        let value = field.input.value;\n        if(!value){\n            field.errors.push(\"Campo requerido\");\n        }\n    };\n    return field\n}\nfunction emailFieldDecorator(field:Field):Field{//Esta función es el decorator\n    let preValidate = field.validate;//Guardamos el método antes de ser extendido\n    field.validate = function(){//Aquí redefinimos o extendemos el método validate()\n        preValidate();//Aquí llamamos al método anterior a ser extendido para ejecutar la y todas las validaciones anteriores\n        let value = field.input.value;\n        if(value.indexOf(\"@\")===-1){\n            field.errors.push(\"Debes ingresar un email\");\n        }\n    };\n    return field\n}\nlet field = new Field(email)\nfield = RequiredFieldDecorator(field);\nemailFieldDecorator(field);\n"]}