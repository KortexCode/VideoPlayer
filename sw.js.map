{"version":3,"file":"sw.js","mappings":"AAEAA,KAAKC,iBAAiB,WAAWC,IAC7BA,EAAMC,UAWVC,iBAGI,aADoBC,OAAOC,KAAK,OACnBC,OAAO,GAYxB,CA1BoBC,GAAW,IAG/BR,KAAKC,iBAAiB,SAASC,IAC3B,MAAMO,EAAUP,EAAMO,QACA,QAAnBA,EAAQC,QAGXR,EAAMS,YAoBVP,eAA6BK,GACzB,MAAMG,QAAcP,OAAOC,KAAK,MAE1BO,QAAiBD,EAAME,MAAML,GAGnC,OAFAM,QAAQC,IAAI,YAAaH,GAElBA,SAAkBI,MAAMR,EACnC,CA3BsBS,CAAcT,GAAS","sources":["webpack://platzivideo/./sw.js"],"sourcesContent":["//El self es como el this para el serviceworker\n//Cuando se instala el serviceworker se disparará este evento\nself.addEventListener(\"install\", event =>{\n    event.waitUntil(precache());//Lista de recursos que ya queremos que tenga en caché\n});\n\nself.addEventListener(\"fetch\", event =>{\n    const request = event.request;\n    if(request.method !== \"GET\"){\n        return;\n    }\n    event.respondWith(cacheResponse(request))\n})\n\nasync function precache(){\n    //caches es un API del Dom\n    const cache = await caches.open(\"v1\");\n    return cache.addAll([\n        //Aquí añadimos varios recursos\n       /*  \"/\",\n        \"/index.html\",\n        \"/src/normalize.css\",\n        \"/src/index.css\",\n        \"/src/MediaPlayer.js\",\n        \"/src/main.js\",\n        \"/src/plugins/AutoPlay.js\",\n        \"/src/plugins/AutoPause.js\",\n        \"/src/assets/btr.mp4\" */\n    ])\n}\n\nasync function cacheResponse(request){\n    const cache = await caches.open(\"v1\");\n    //Para saber si hay un copia del request solicitado usamos match\n    const responde = await cache.match(request);\n    console.log(\"respuesta\", responde)\n    //Respondemos con lo obtenido y si no hay nada, respondemos con lo que venga de internet\n    return responde || await fetch(request);\n}"],"names":["self","addEventListener","event","waitUntil","async","caches","open","addAll","precache","request","method","respondWith","cache","responde","match","console","log","fetch","cacheResponse"],"sourceRoot":""}